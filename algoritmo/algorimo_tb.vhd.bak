library ieee;
	use ieee.std_logic_1164.all;
	use IEEE.NUMERIC_STD.ALL; 		--libreria para cambios entre formatos
	use IEEE.MATH_REAL.ALL; 		--libreria para log2 y ceil

entity algorimo_tb is

port()
end entity;

architecture arch of algorimo_tb is
component Algoritmo is
	generic(
		umbral 				: integer :=0;
		cantidad_eventos 	: integer :=2**12		
	);
	port(
		-- entradas generales--
		clk_i											: in	std_logic;
		Start_i,reset_i,trigger_i				: in	std_logic;								--leer y trigger son senales externas que le avisan que debe leer los pixeles o reiniciar todo para un nueva img
		-- habilitaciones --
		enable_done									: in std_logic;
		-- entrada de trigger -- 				
  		trigger										: in std_logic;
		-- entradas Capture_input_controller--
		pix_cnt_i									: in integer range 0 to 1_310_721;   --cuenta de los pixeles leidos
		pix_data_i 									: in std_logic_vector(7 downto 0);		-- data proveniente de Capture_input_controller
		-- entrada ram energia y cantidad--
		energia_i , cantidad_i 					: in std_logic_vector(7 downto 0);
		--entrada FIFO
		FIFO_data_i									: in std_logic_vector(integer(ceil(log2(real(cantidad_eventos))))-1 downto 0);


		-- salida trigger --
		trigger_CIC, enable_CIC, trigger_cam: out std_logic; 
		-- salidas shift FIFO--
		--??
		--salida hacia la FIFO--
		FIFO_data_o									: out std_logic_vector (integer(ceil(log2(real(cantidad_eventos))))-1 downto 0);
		FIFO_dir_o									: out std_logic_vector (10 downto 0); 	--las direcciones necesarias para las 1283 posiciones de memoria
		FIFO_RW_o									: out std_logic;								--señal para lectura y escritura de la ram FIFO

		--salida hacia energia y cantidad--
		energia_o , cantidad_o 					: out std_logic_vector (7 downto 0);
		--salida control ram de energias y cantidad--
		r_w_energia , r_w_cantidad				: out std_logic;
		indice_energias_o , indice_cantidad_o 		: out std_logic_vector (integer(ceil(log2(real(cantidad_eventos))))-1 downto 0)

	);

end component;

begin

UUT : algoritmo 
		generic map (
			umbral => 80;
			cantidad_eventos => 2**12
			)
			port map(
					-- entradas generales--
				clk_i											
				Start_i
				reset_i
				trigger_i												--leer y trigger son senales externas que le avisan que debe leer los pixeles o reiniciar todo para un nueva img
				-- habilitaciones --
				enable_done									
				-- entrada de trigger -- 				
				trigger										
				-- entradas Capture_input_controller--
				pix_cnt_i									   --cuenta de los pixeles leidos
				pix_data_i 											-- data proveniente de Capture_input_controller
				-- entrada ram energia y cantidad--
				energia_i , cantidad_i 					
				--entrada FIFO
				FIFO_data_i									
		
		
				-- salida trigger --
				trigger_CIC
				enable_CIC
				trigger_cam
				--salida hacia la FIFO--
				FIFO_data_o									
				FIFO_dir_o									 	--las direcciones necesarias para las 1283 posiciones de memoria
				FIFO_RW_o																--señal para lectura y escritura de la ram FIFO
		
				--salida hacia energia y cantidad--
				energia_o 
				cantidad_o 					
				--salida control ram de energias y cantidad--
				r_w_energia 
				r_w_cantidad				
				indice_energias_o 
				indice_cantidad_o 		
			);

end architecture;