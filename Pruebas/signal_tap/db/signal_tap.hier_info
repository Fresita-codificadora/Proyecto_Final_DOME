|signal_tap
trigger_cam <= prueba_1:inst3.trigger_camara
clk_50 => prueba_1:inst3.clk_50
clk_50 => divisor:inst2.clk_in
clk_50 => captura_pixeles:inst1.clk_interno
trigger_btn => prueba_1:inst3.trigger_i
done_led <= Programador_controlador_block:inst.DONE
start_btn => Programador_controlador_block:inst.start
reset_btn => Programador_controlador_block:inst.reset
reset_btn => captura_pixeles:inst1.reset
sda <> Programador_controlador_block:inst.sda
sca <= Programador_controlador_block:inst.sca
clk_cam <= divisor:inst2.clk_out
data_led[0] <= captura_pixeles:inst1.pix_data_o[0]
data_led[1] <= captura_pixeles:inst1.pix_data_o[1]
data_led[2] <= captura_pixeles:inst1.pix_data_o[2]
data_led[3] <= captura_pixeles:inst1.pix_data_o[3]
data_led[4] <= captura_pixeles:inst1.pix_data_o[4]
data_led[5] <= captura_pixeles:inst1.pix_data_o[5]
data_led[6] <= captura_pixeles:inst1.pix_data_o[6]
data_led[7] <= captura_pixeles:inst1.pix_data_o[7]
pix_clk => captura_pixeles:inst1.pix_clk
Line_valid => captura_pixeles:inst1.line_valid
Frame_valid => captura_pixeles:inst1.frame_valid
pix_data[0] => captura_pixeles:inst1.pix_data_i[0]
pix_data[1] => captura_pixeles:inst1.pix_data_i[1]
pix_data[2] => captura_pixeles:inst1.pix_data_i[2]
pix_data[3] => captura_pixeles:inst1.pix_data_i[3]
pix_data[4] => captura_pixeles:inst1.pix_data_i[4]
pix_data[5] => captura_pixeles:inst1.pix_data_i[5]
pix_data[6] => captura_pixeles:inst1.pix_data_i[6]
pix_data[7] => captura_pixeles:inst1.pix_data_i[7]


|signal_tap|prueba_1:inst3
clk_50 => trigger_o~reg0.CLK
clk_50 => trigger_camara~reg0.CLK
clk_50 => contador[0].CLK
clk_50 => contador[1].CLK
clk_50 => contador[2].CLK
clk_50 => contador[3].CLK
clk_50 => contador[4].CLK
clk_50 => inicio.CLK
clk_50 => trigger_prev.CLK
trigger_i => process_0.IN1
trigger_i => inicio.OUTPUTSELECT
trigger_i => trigger_prev.DATAIN
trigger_o <= trigger_o~reg0.DB_MAX_OUTPUT_PORT_TYPE
trigger_camara <= trigger_camara~reg0.DB_MAX_OUTPUT_PORT_TYPE


|signal_tap|Programador_controlador_block:inst
DONE <= controlador:inst.done_s
clk => controlador:inst.clk
clk => clk_out.DATAIN
start => controlador:inst.start
reset => controlador:inst.reset
sda <> programador:inst1.sda_o
sca <= programador:inst1.sca_o
clk_out <= clk.DB_MAX_OUTPUT_PORT_TYPE
reset_camara <= <VCC>


|signal_tap|Programador_controlador_block:inst|controlador:inst
clk => clk_int_2.CLK
clk => clk_int.CLK
clk => cuenta_int_2[0].CLK
clk => cuenta_int_2[1].CLK
clk => cuenta_int_2[2].CLK
clk => cuenta_int_2[3].CLK
clk => cuenta_int_2[4].CLK
clk => cuenta_int[0].CLK
clk => cuenta_int[1].CLK
clk => cuenta_int[2].CLK
clk => cuenta_int[3].CLK
clk => cuenta_int[4].CLK
start => state.DATAB
start => Selector0.IN1
reset => count[0].OUTPUTSELECT
reset => count[1].OUTPUTSELECT
reset => state.idle.IN0
buisy => Selector0.IN3
buisy => Selector2.IN3
buisy => Selector4.IN3
buisy => Selector6.IN3
buisy => Selector7.IN3
buisy => Selector8.IN3
buisy => Selector10.IN3
buisy => Selector12.IN3
buisy => Selector14.IN3
buisy => Selector15.IN3
buisy => count.OUTPUTSELECT
buisy => count.OUTPUTSELECT
buisy => Selector1.IN1
buisy => Selector3.IN1
buisy => Selector5.IN1
buisy => Selector7.IN1
buisy => Selector8.IN1
buisy => Selector9.IN1
buisy => Selector11.IN1
buisy => Selector13.IN1
buisy => Selector15.IN1
buisy => Selector16.IN2
err => state.idle.IN1
err => count[1].ENA
err => count[0].ENA
done_s <= done_s.DB_MAX_OUTPUT_PORT_TYPE
clk_o <= clk_int.DB_MAX_OUTPUT_PORT_TYPE
r_s <= r_s.DB_MAX_OUTPUT_PORT_TYPE
s_t <= s_t.DB_MAX_OUTPUT_PORT_TYPE
w <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
stop <= stop.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= WideOr24.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= WideOr23.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= WideOr22.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= WideOr21.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= <GND>
data[7] <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE


|signal_tap|Programador_controlador_block:inst|programador:inst1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => state~1.DATAIN
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => state.DATAB
s_t => Selector0.IN2
r_w => state.OUTPUTSELECT
r_w => state.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => Selector1.IN4
stop => state.DATAA
stop => state.DATAA
reset => state~3.DATAIN
reset => data[7].ENA
reset => data[6].ENA
reset => data[5].ENA
reset => data[4].ENA
reset => data[3].ENA
reset => data[2].ENA
reset => data[1].ENA
reset => data[0].ENA
reset => count[2].ENA
reset => count[1].ENA
reset => count[0].ENA
data_in[0] => data.DATAB
data_in[0] => data.DATAB
data_in[1] => data.DATAB
data_in[1] => data.DATAB
data_in[2] => data.DATAB
data_in[2] => data.DATAB
data_in[3] => data.DATAB
data_in[3] => data.DATAB
data_in[4] => data.DATAB
data_in[4] => data.DATAB
data_in[5] => data.DATAB
data_in[5] => data.DATAB
data_in[6] => data.DATAB
data_in[6] => data.DATAB
data_in[7] => data.DATAB
data_in[7] => data.DATAB
sda_o <> sda_o
sca_o <= sca_o.DB_MAX_OUTPUT_PORT_TYPE
err <= err.DB_MAX_OUTPUT_PORT_TYPE
buisy <= buisy.DB_MAX_OUTPUT_PORT_TYPE


|signal_tap|divisor:inst2
clk_in => clk_int.CLK
clk_in => enable.CLK
clk_in => cuenta[0].CLK
clk_in => cuenta[1].CLK
clk_in => cuenta[2].CLK
clk_out <= clk_int.DB_MAX_OUTPUT_PORT_TYPE


|signal_tap|captura_pixeles:inst1
clk_interno => register_out[0].CLK
clk_interno => register_out[1].CLK
clk_interno => register_out[2].CLK
clk_interno => register_out[3].CLK
clk_interno => register_out[4].CLK
clk_interno => register_out[5].CLK
clk_interno => register_out[6].CLK
clk_interno => register_out[7].CLK
clk_interno => register_1[0].CLK
clk_interno => register_1[1].CLK
clk_interno => register_1[2].CLK
clk_interno => register_1[3].CLK
clk_interno => register_1[4].CLK
clk_interno => register_1[5].CLK
clk_interno => register_1[6].CLK
clk_interno => register_1[7].CLK
clk_interno => pix_count_interno_out[0].CLK
clk_interno => pix_count_interno_out[1].CLK
clk_interno => pix_count_interno_out[2].CLK
clk_interno => pix_count_interno_out[3].CLK
clk_interno => pix_count_interno_out[4].CLK
clk_interno => pix_count_interno_out[5].CLK
clk_interno => pix_count_interno_out[6].CLK
clk_interno => pix_count_interno_out[7].CLK
clk_interno => pix_count_interno_out[8].CLK
clk_interno => pix_count_interno_out[9].CLK
clk_interno => pix_count_interno_out[10].CLK
clk_interno => pix_count_interno_out[11].CLK
clk_interno => pix_count_interno_out[12].CLK
clk_interno => pix_count_interno_out[13].CLK
clk_interno => pix_count_interno_out[14].CLK
clk_interno => pix_count_interno_out[15].CLK
clk_interno => pix_count_interno_out[16].CLK
clk_interno => pix_count_interno_out[17].CLK
clk_interno => pix_count_interno_out[18].CLK
clk_interno => pix_count_interno_out[19].CLK
clk_interno => pix_count_interno_out[20].CLK
clk_interno => pix_count_interno_1[0].CLK
clk_interno => pix_count_interno_1[1].CLK
clk_interno => pix_count_interno_1[2].CLK
clk_interno => pix_count_interno_1[3].CLK
clk_interno => pix_count_interno_1[4].CLK
clk_interno => pix_count_interno_1[5].CLK
clk_interno => pix_count_interno_1[6].CLK
clk_interno => pix_count_interno_1[7].CLK
clk_interno => pix_count_interno_1[8].CLK
clk_interno => pix_count_interno_1[9].CLK
clk_interno => pix_count_interno_1[10].CLK
clk_interno => pix_count_interno_1[11].CLK
clk_interno => pix_count_interno_1[12].CLK
clk_interno => pix_count_interno_1[13].CLK
clk_interno => pix_count_interno_1[14].CLK
clk_interno => pix_count_interno_1[15].CLK
clk_interno => pix_count_interno_1[16].CLK
clk_interno => pix_count_interno_1[17].CLK
clk_interno => pix_count_interno_1[18].CLK
clk_interno => pix_count_interno_1[19].CLK
clk_interno => pix_count_interno_1[20].CLK
reset => clk_rapido.IN0
trigger => clk_rapido.IN1
pix_clk => register_0[0].CLK
pix_clk => register_0[1].CLK
pix_clk => register_0[2].CLK
pix_clk => register_0[3].CLK
pix_clk => register_0[4].CLK
pix_clk => register_0[5].CLK
pix_clk => register_0[6].CLK
pix_clk => register_0[7].CLK
pix_clk => pix_count_interno_0[0].CLK
pix_clk => pix_count_interno_0[1].CLK
pix_clk => pix_count_interno_0[2].CLK
pix_clk => pix_count_interno_0[3].CLK
pix_clk => pix_count_interno_0[4].CLK
pix_clk => pix_count_interno_0[5].CLK
pix_clk => pix_count_interno_0[6].CLK
pix_clk => pix_count_interno_0[7].CLK
pix_clk => pix_count_interno_0[8].CLK
pix_clk => pix_count_interno_0[9].CLK
pix_clk => pix_count_interno_0[10].CLK
pix_clk => pix_count_interno_0[11].CLK
pix_clk => pix_count_interno_0[12].CLK
pix_clk => pix_count_interno_0[13].CLK
pix_clk => pix_count_interno_0[14].CLK
pix_clk => pix_count_interno_0[15].CLK
pix_clk => pix_count_interno_0[16].CLK
pix_clk => pix_count_interno_0[17].CLK
pix_clk => pix_count_interno_0[18].CLK
pix_clk => pix_count_interno_0[19].CLK
pix_clk => pix_count_interno_0[20].CLK
pix_data_i[0] => register_0[0].DATAIN
pix_data_i[1] => register_0[1].DATAIN
pix_data_i[2] => register_0[2].DATAIN
pix_data_i[3] => register_0[3].DATAIN
pix_data_i[4] => register_0[4].DATAIN
pix_data_i[5] => register_0[5].DATAIN
pix_data_i[6] => register_0[6].DATAIN
pix_data_i[7] => register_0[7].DATAIN
line_valid => leer.IN0
frame_valid => leer.IN1
pix_data_o[0] <= register_out[0].DB_MAX_OUTPUT_PORT_TYPE
pix_data_o[1] <= register_out[1].DB_MAX_OUTPUT_PORT_TYPE
pix_data_o[2] <= register_out[2].DB_MAX_OUTPUT_PORT_TYPE
pix_data_o[3] <= register_out[3].DB_MAX_OUTPUT_PORT_TYPE
pix_data_o[4] <= register_out[4].DB_MAX_OUTPUT_PORT_TYPE
pix_data_o[5] <= register_out[5].DB_MAX_OUTPUT_PORT_TYPE
pix_data_o[6] <= register_out[6].DB_MAX_OUTPUT_PORT_TYPE
pix_data_o[7] <= register_out[7].DB_MAX_OUTPUT_PORT_TYPE
pix_count[0] <= pix_count_interno_out[0].DB_MAX_OUTPUT_PORT_TYPE
pix_count[1] <= pix_count_interno_out[1].DB_MAX_OUTPUT_PORT_TYPE
pix_count[2] <= pix_count_interno_out[2].DB_MAX_OUTPUT_PORT_TYPE
pix_count[3] <= pix_count_interno_out[3].DB_MAX_OUTPUT_PORT_TYPE
pix_count[4] <= pix_count_interno_out[4].DB_MAX_OUTPUT_PORT_TYPE
pix_count[5] <= pix_count_interno_out[5].DB_MAX_OUTPUT_PORT_TYPE
pix_count[6] <= pix_count_interno_out[6].DB_MAX_OUTPUT_PORT_TYPE
pix_count[7] <= pix_count_interno_out[7].DB_MAX_OUTPUT_PORT_TYPE
pix_count[8] <= pix_count_interno_out[8].DB_MAX_OUTPUT_PORT_TYPE
pix_count[9] <= pix_count_interno_out[9].DB_MAX_OUTPUT_PORT_TYPE
pix_count[10] <= pix_count_interno_out[10].DB_MAX_OUTPUT_PORT_TYPE
pix_count[11] <= pix_count_interno_out[11].DB_MAX_OUTPUT_PORT_TYPE
pix_count[12] <= pix_count_interno_out[12].DB_MAX_OUTPUT_PORT_TYPE
pix_count[13] <= pix_count_interno_out[13].DB_MAX_OUTPUT_PORT_TYPE
pix_count[14] <= pix_count_interno_out[14].DB_MAX_OUTPUT_PORT_TYPE
pix_count[15] <= pix_count_interno_out[15].DB_MAX_OUTPUT_PORT_TYPE
pix_count[16] <= pix_count_interno_out[16].DB_MAX_OUTPUT_PORT_TYPE
pix_count[17] <= pix_count_interno_out[17].DB_MAX_OUTPUT_PORT_TYPE
pix_count[18] <= pix_count_interno_out[18].DB_MAX_OUTPUT_PORT_TYPE
pix_count[19] <= pix_count_interno_out[19].DB_MAX_OUTPUT_PORT_TYPE
pix_count[20] <= pix_count_interno_out[20].DB_MAX_OUTPUT_PORT_TYPE


