|Todo_junto
Reset_camara <= Programador_controlador_block:inst1.reset_camara
clk_50 => divisor:inst2.clk_in
clk_50 => trigger_handler:inst5.clk
clk_50 => CIC_SRAM_BLOCK:inst.clk
clk_50 => decodificador:inst3.clk
Start_btn => Programador_controlador_block:inst1.start
Start_btn => CIC_SRAM_BLOCK:inst.start
Reset_btn => Programador_controlador_block:inst1.reset
Reset_btn => trigger_handler:inst5.reset
Reset_btn => CIC_SRAM_BLOCK:inst.rest
Reset_btn => decodificador:inst3.reset
SDA <> Programador_controlador_block:inst1.sda
clk_camara <= Programador_controlador_block:inst1.clk_out
DONE_LED <= Programador_controlador_block:inst1.DONE
SCA <= Programador_controlador_block:inst1.sca
Trigger_camara <= trigger_handler:inst5.trigger_cam
Trigger_btn => trigger_handler:inst5.trigger_in
Chip_enable <= CIC_SRAM_BLOCK:inst.CE
line_valid => CIC_SRAM_BLOCK:inst.line_v
Frame_valid => CIC_SRAM_BLOCK:inst.frame_v
Pixel_clk => CIC_SRAM_BLOCK:inst.Pixel_clk
DQ[0] <> CIC_SRAM_BLOCK:inst.DQ[0]
DQ[1] <> CIC_SRAM_BLOCK:inst.DQ[1]
DQ[2] <> CIC_SRAM_BLOCK:inst.DQ[2]
DQ[3] <> CIC_SRAM_BLOCK:inst.DQ[3]
DQ[4] <> CIC_SRAM_BLOCK:inst.DQ[4]
DQ[5] <> CIC_SRAM_BLOCK:inst.DQ[5]
DQ[6] <> CIC_SRAM_BLOCK:inst.DQ[6]
DQ[7] <> CIC_SRAM_BLOCK:inst.DQ[7]
DQ[8] <> CIC_SRAM_BLOCK:inst.DQ[8]
DQ[9] <> CIC_SRAM_BLOCK:inst.DQ[9]
DQ[10] <> CIC_SRAM_BLOCK:inst.DQ[10]
DQ[11] <> CIC_SRAM_BLOCK:inst.DQ[11]
DQ[12] <> CIC_SRAM_BLOCK:inst.DQ[12]
DQ[13] <> CIC_SRAM_BLOCK:inst.DQ[13]
DQ[14] <> CIC_SRAM_BLOCK:inst.DQ[14]
DQ[15] <> CIC_SRAM_BLOCK:inst.DQ[15]
Pixel_data[0] => CIC_SRAM_BLOCK:inst.Pixel_dat[0]
Pixel_data[1] => CIC_SRAM_BLOCK:inst.Pixel_dat[1]
Pixel_data[2] => CIC_SRAM_BLOCK:inst.Pixel_dat[2]
Pixel_data[3] => CIC_SRAM_BLOCK:inst.Pixel_dat[3]
Pixel_data[4] => CIC_SRAM_BLOCK:inst.Pixel_dat[4]
Pixel_data[5] => CIC_SRAM_BLOCK:inst.Pixel_dat[5]
Pixel_data[6] => CIC_SRAM_BLOCK:inst.Pixel_dat[6]
Pixel_data[7] => CIC_SRAM_BLOCK:inst.Pixel_dat[7]
Output_enable <= CIC_SRAM_BLOCK:inst.OE
Write_enable <= CIC_SRAM_BLOCK:inst.WE
UB <= CIC_SRAM_BLOCK:inst.UB
LB <= CIC_SRAM_BLOCK:inst.LB
LED_FIN <= CIC_SRAM_BLOCK:inst.fin_led
led_leer <= CIC_SRAM_BLOCK:inst.leer_int
add[0] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[0]
add[1] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[1]
add[2] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[2]
add[3] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[3]
add[4] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[4]
add[5] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[5]
add[6] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[6]
add[7] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[7]
add[8] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[8]
add[9] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[9]
add[10] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[10]
add[11] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[11]
add[12] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[12]
add[13] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[13]
add[14] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[14]
add[15] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[15]
add[16] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[16]
add[17] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[17]
add[18] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[18]
add[19] <= CIC_SRAM_BLOCK:inst.ADDR_RAM[19]
led_pix_count[0] <= CIC_SRAM_BLOCK:inst.pix_count_int[0]
led_pix_count[1] <= CIC_SRAM_BLOCK:inst.pix_count_int[1]
led_pix_count[2] <= CIC_SRAM_BLOCK:inst.pix_count_int[2]
led_pix_count[3] <= CIC_SRAM_BLOCK:inst.pix_count_int[3]
led_pix_count[4] <= CIC_SRAM_BLOCK:inst.pix_count_int[4]
led_pix_count[5] <= CIC_SRAM_BLOCK:inst.pix_count_int[5]
led_pix_count[6] <= CIC_SRAM_BLOCK:inst.pix_count_int[6]
led_pix_count[7] <= CIC_SRAM_BLOCK:inst.pix_count_int[7]
led_pix_count[8] <= CIC_SRAM_BLOCK:inst.pix_count_int[8]
led_pix_count[9] <= CIC_SRAM_BLOCK:inst.pix_count_int[9]
led_pix_count[10] <= CIC_SRAM_BLOCK:inst.pix_count_int[10]
led_pix_count[11] <= CIC_SRAM_BLOCK:inst.pix_count_int[11]
led_pix_count[12] <= CIC_SRAM_BLOCK:inst.pix_count_int[12]
led_pix_count[13] <= CIC_SRAM_BLOCK:inst.pix_count_int[13]
led_pix_count[14] <= CIC_SRAM_BLOCK:inst.pix_count_int[14]
led_pix_count[15] <= CIC_SRAM_BLOCK:inst.pix_count_int[15]
led_pix_count[16] <= CIC_SRAM_BLOCK:inst.pix_count_int[16]
led_pix_count[17] <= CIC_SRAM_BLOCK:inst.pix_count_int[17]
led_pix_count[18] <= CIC_SRAM_BLOCK:inst.pix_count_int[18]
led_pix_count[19] <= CIC_SRAM_BLOCK:inst.pix_count_int[19]
led_pix_count[20] <= CIC_SRAM_BLOCK:inst.pix_count_int[20]
siete_seg[0] <= cable[0].DB_MAX_OUTPUT_PORT_TYPE
siete_seg[1] <= cable[1].DB_MAX_OUTPUT_PORT_TYPE
siete_seg[2] <= cable[2].DB_MAX_OUTPUT_PORT_TYPE
siete_seg[3] <= cable[3].DB_MAX_OUTPUT_PORT_TYPE
siete_seg[4] <= cable[4].DB_MAX_OUTPUT_PORT_TYPE
siete_seg[5] <= cable[5].DB_MAX_OUTPUT_PORT_TYPE
siete_seg[6] <= cable[6].DB_MAX_OUTPUT_PORT_TYPE


|Todo_junto|Programador_controlador_block:inst1
DONE <= controlador:inst.done_s
clk => controlador:inst.clk
clk => clk_out.DATAIN
start => controlador:inst.start
reset => controlador:inst.reset
sda <> programador:inst1.sda_o
sca <= programador:inst1.sca_o
clk_out <= clk.DB_MAX_OUTPUT_PORT_TYPE
reset_camara <= <VCC>


|Todo_junto|Programador_controlador_block:inst1|controlador:inst
clk => clk_int_2.CLK
clk => clk_int.CLK
clk => cuenta_int_2[0].CLK
clk => cuenta_int_2[1].CLK
clk => cuenta_int_2[2].CLK
clk => cuenta_int_2[3].CLK
clk => cuenta_int_2[4].CLK
clk => cuenta_int[0].CLK
clk => cuenta_int[1].CLK
clk => cuenta_int[2].CLK
clk => cuenta_int[3].CLK
clk => cuenta_int[4].CLK
start => state.DATAB
start => Selector0.IN1
reset => count[0].OUTPUTSELECT
reset => count[1].OUTPUTSELECT
reset => state.idle.IN0
buisy => Selector0.IN3
buisy => Selector2.IN3
buisy => Selector4.IN3
buisy => Selector6.IN3
buisy => Selector7.IN3
buisy => Selector8.IN3
buisy => Selector10.IN3
buisy => Selector12.IN3
buisy => Selector14.IN3
buisy => Selector15.IN3
buisy => count.OUTPUTSELECT
buisy => count.OUTPUTSELECT
buisy => Selector1.IN1
buisy => Selector3.IN1
buisy => Selector5.IN1
buisy => Selector7.IN1
buisy => Selector8.IN1
buisy => Selector9.IN1
buisy => Selector11.IN1
buisy => Selector13.IN1
buisy => Selector15.IN1
buisy => Selector16.IN2
err => state.idle.IN1
err => count[1].ENA
err => count[0].ENA
done_s <= done_s.DB_MAX_OUTPUT_PORT_TYPE
clk_o <= clk_int.DB_MAX_OUTPUT_PORT_TYPE
r_s <= r_s.DB_MAX_OUTPUT_PORT_TYPE
s_t <= s_t.DB_MAX_OUTPUT_PORT_TYPE
w <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
stop <= stop.DB_MAX_OUTPUT_PORT_TYPE
data[0] <= WideOr24.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= WideOr23.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= WideOr22.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= WideOr21.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= <GND>
data[7] <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE


|Todo_junto|Programador_controlador_block:inst1|programador:inst1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => state~1.DATAIN
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => data.OUTPUTSELECT
s_t => state.DATAB
s_t => Selector0.IN2
r_w => state.OUTPUTSELECT
r_w => state.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => data.OUTPUTSELECT
r_w => Selector1.IN4
stop => state.DATAA
stop => state.DATAA
reset => state~3.DATAIN
reset => data[7].ENA
reset => data[6].ENA
reset => data[5].ENA
reset => data[4].ENA
reset => data[3].ENA
reset => data[2].ENA
reset => data[1].ENA
reset => data[0].ENA
reset => count[2].ENA
reset => count[1].ENA
reset => count[0].ENA
data_in[0] => data.DATAB
data_in[0] => data.DATAB
data_in[1] => data.DATAB
data_in[1] => data.DATAB
data_in[2] => data.DATAB
data_in[2] => data.DATAB
data_in[3] => data.DATAB
data_in[3] => data.DATAB
data_in[4] => data.DATAB
data_in[4] => data.DATAB
data_in[5] => data.DATAB
data_in[5] => data.DATAB
data_in[6] => data.DATAB
data_in[6] => data.DATAB
data_in[7] => data.DATAB
data_in[7] => data.DATAB
sda_o <> sda_o
sca_o <= sca_o.DB_MAX_OUTPUT_PORT_TYPE
err <= err.DB_MAX_OUTPUT_PORT_TYPE
buisy <= buisy.DB_MAX_OUTPUT_PORT_TYPE


|Todo_junto|divisor:inst2
clk_in => clk_int.CLK
clk_in => enable.CLK
clk_in => cuenta[0].CLK
clk_in => cuenta[1].CLK
clk_in => cuenta[2].CLK
clk_out <= clk_int.DB_MAX_OUTPUT_PORT_TYPE


|Todo_junto|trigger_handler:inst5
clk => cuenta[0].CLK
clk => cuenta[1].CLK
clk => cuenta[2].CLK
clk => state~3.DATAIN
trigger_in => state.s0.DATAIN
trigger_in => cuenta.OUTPUTSELECT
trigger_in => cuenta.OUTPUTSELECT
trigger_in => cuenta.OUTPUTSELECT
trigger_in => state.OUTPUTSELECT
trigger_in => state.OUTPUTSELECT
trigger_in => state.DATAB
trigger_in => Selector0.IN1
trigger_in => Selector1.IN1
reset => state~5.DATAIN
reset => cuenta[2].ENA
reset => cuenta[1].ENA
reset => cuenta[0].ENA
trigger_cam <= trigger_cam.DB_MAX_OUTPUT_PORT_TYPE
trigger_int <= trigger_int.DB_MAX_OUTPUT_PORT_TYPE


|Todo_junto|CIC_SRAM_BLOCK:inst
CE <= sram:inst2.SRAM_CE_N
clk => sram:inst2.CLOCK
clk => Sram_CIC_2:inst3.clk
start => Sram_CIC_2:inst3.Start
rest => Sram_CIC_2:inst3.reset
rest => Capture_Input_Controller:inst.reset
line_v => Capture_Input_Controller:inst.line_valid
frame_v => Capture_Input_Controller:inst.frame_valid
Pixel_clk => Capture_Input_Controller:inst.pclk
enable => Capture_Input_Controller:inst.enable
trigger => Capture_Input_Controller:inst.trigger
trigger => Sram_CIC_2:inst3.trigger
Pixel_dat[0] => Capture_Input_Controller:inst.D_in[0]
Pixel_dat[1] => Capture_Input_Controller:inst.D_in[1]
Pixel_dat[2] => Capture_Input_Controller:inst.D_in[2]
Pixel_dat[3] => Capture_Input_Controller:inst.D_in[3]
Pixel_dat[4] => Capture_Input_Controller:inst.D_in[4]
Pixel_dat[5] => Capture_Input_Controller:inst.D_in[5]
Pixel_dat[6] => Capture_Input_Controller:inst.D_in[6]
Pixel_dat[7] => Capture_Input_Controller:inst.D_in[7]
DQ[0] <> sram:inst2.SRAM_DQ[0]
DQ[1] <> sram:inst2.SRAM_DQ[1]
DQ[2] <> sram:inst2.SRAM_DQ[2]
DQ[3] <> sram:inst2.SRAM_DQ[3]
DQ[4] <> sram:inst2.SRAM_DQ[4]
DQ[5] <> sram:inst2.SRAM_DQ[5]
DQ[6] <> sram:inst2.SRAM_DQ[6]
DQ[7] <> sram:inst2.SRAM_DQ[7]
DQ[8] <> sram:inst2.SRAM_DQ[8]
DQ[9] <> sram:inst2.SRAM_DQ[9]
DQ[10] <> sram:inst2.SRAM_DQ[10]
DQ[11] <> sram:inst2.SRAM_DQ[11]
DQ[12] <> sram:inst2.SRAM_DQ[12]
DQ[13] <> sram:inst2.SRAM_DQ[13]
DQ[14] <> sram:inst2.SRAM_DQ[14]
DQ[15] <> sram:inst2.SRAM_DQ[15]
OE <= sram:inst2.SRAM_OE_N
WE <= sram:inst2.SRAM_WE_N
UB <= sram:inst2.SRAM_UB_N
LB <= sram:inst2.SRAM_LB_N
fin_led <= Sram_CIC_2:inst3.fin_signal
leer_int <= Capture_Input_Controller:inst.leer
ADDR_RAM[0] <= sram:inst2.SRAM_ADDR[0]
ADDR_RAM[1] <= sram:inst2.SRAM_ADDR[1]
ADDR_RAM[2] <= sram:inst2.SRAM_ADDR[2]
ADDR_RAM[3] <= sram:inst2.SRAM_ADDR[3]
ADDR_RAM[4] <= sram:inst2.SRAM_ADDR[4]
ADDR_RAM[5] <= sram:inst2.SRAM_ADDR[5]
ADDR_RAM[6] <= sram:inst2.SRAM_ADDR[6]
ADDR_RAM[7] <= sram:inst2.SRAM_ADDR[7]
ADDR_RAM[8] <= sram:inst2.SRAM_ADDR[8]
ADDR_RAM[9] <= sram:inst2.SRAM_ADDR[9]
ADDR_RAM[10] <= sram:inst2.SRAM_ADDR[10]
ADDR_RAM[11] <= sram:inst2.SRAM_ADDR[11]
ADDR_RAM[12] <= sram:inst2.SRAM_ADDR[12]
ADDR_RAM[13] <= sram:inst2.SRAM_ADDR[13]
ADDR_RAM[14] <= sram:inst2.SRAM_ADDR[14]
ADDR_RAM[15] <= sram:inst2.SRAM_ADDR[15]
ADDR_RAM[16] <= sram:inst2.SRAM_ADDR[16]
ADDR_RAM[17] <= sram:inst2.SRAM_ADDR[17]
ADDR_RAM[18] <= sram:inst2.SRAM_ADDR[18]
ADDR_RAM[19] <= sram:inst2.SRAM_ADDR[19]
Data_output[0] <= sram:inst2.DATA_OUT[0]
Data_output[1] <= sram:inst2.DATA_OUT[1]
Data_output[2] <= sram:inst2.DATA_OUT[2]
Data_output[3] <= sram:inst2.DATA_OUT[3]
Data_output[4] <= sram:inst2.DATA_OUT[4]
Data_output[5] <= sram:inst2.DATA_OUT[5]
Data_output[6] <= sram:inst2.DATA_OUT[6]
Data_output[7] <= sram:inst2.DATA_OUT[7]
Data_output[8] <= sram:inst2.DATA_OUT[8]
Data_output[9] <= sram:inst2.DATA_OUT[9]
Data_output[10] <= sram:inst2.DATA_OUT[10]
Data_output[11] <= sram:inst2.DATA_OUT[11]
Data_output[12] <= sram:inst2.DATA_OUT[12]
Data_output[13] <= sram:inst2.DATA_OUT[13]
Data_output[14] <= sram:inst2.DATA_OUT[14]
Data_output[15] <= sram:inst2.DATA_OUT[15]
estado[0] <= Sram_CIC_2:inst3.estado[0]
estado[1] <= Sram_CIC_2:inst3.estado[1]
estado[2] <= Sram_CIC_2:inst3.estado[2]
estado[3] <= Sram_CIC_2:inst3.estado[3]
pix_count_int[0] <= Capture_Input_Controller:inst.pix_count[0]
pix_count_int[1] <= Capture_Input_Controller:inst.pix_count[1]
pix_count_int[2] <= Capture_Input_Controller:inst.pix_count[2]
pix_count_int[3] <= Capture_Input_Controller:inst.pix_count[3]
pix_count_int[4] <= Capture_Input_Controller:inst.pix_count[4]
pix_count_int[5] <= Capture_Input_Controller:inst.pix_count[5]
pix_count_int[6] <= Capture_Input_Controller:inst.pix_count[6]
pix_count_int[7] <= Capture_Input_Controller:inst.pix_count[7]
pix_count_int[8] <= Capture_Input_Controller:inst.pix_count[8]
pix_count_int[9] <= Capture_Input_Controller:inst.pix_count[9]
pix_count_int[10] <= Capture_Input_Controller:inst.pix_count[10]
pix_count_int[11] <= Capture_Input_Controller:inst.pix_count[11]
pix_count_int[12] <= Capture_Input_Controller:inst.pix_count[12]
pix_count_int[13] <= Capture_Input_Controller:inst.pix_count[13]
pix_count_int[14] <= Capture_Input_Controller:inst.pix_count[14]
pix_count_int[15] <= Capture_Input_Controller:inst.pix_count[15]
pix_count_int[16] <= Capture_Input_Controller:inst.pix_count[16]
pix_count_int[17] <= Capture_Input_Controller:inst.pix_count[17]
pix_count_int[18] <= Capture_Input_Controller:inst.pix_count[18]
pix_count_int[19] <= Capture_Input_Controller:inst.pix_count[19]
pix_count_int[20] <= Capture_Input_Controller:inst.pix_count[20]


|Todo_junto|CIC_SRAM_BLOCK:inst|sram:inst2
CLOCK => DATA_OUT[0]~reg0.CLK
CLOCK => DATA_OUT[1]~reg0.CLK
CLOCK => DATA_OUT[2]~reg0.CLK
CLOCK => DATA_OUT[3]~reg0.CLK
CLOCK => DATA_OUT[4]~reg0.CLK
CLOCK => DATA_OUT[5]~reg0.CLK
CLOCK => DATA_OUT[6]~reg0.CLK
CLOCK => DATA_OUT[7]~reg0.CLK
CLOCK => DATA_OUT[8]~reg0.CLK
CLOCK => DATA_OUT[9]~reg0.CLK
CLOCK => DATA_OUT[10]~reg0.CLK
CLOCK => DATA_OUT[11]~reg0.CLK
CLOCK => DATA_OUT[12]~reg0.CLK
CLOCK => DATA_OUT[13]~reg0.CLK
CLOCK => DATA_OUT[14]~reg0.CLK
CLOCK => DATA_OUT[15]~reg0.CLK
CLOCK => S_ACTION.CLK
CLOCK => SRAM_DQ[0]~reg0.CLK
CLOCK => SRAM_DQ[0]~en.CLK
CLOCK => SRAM_DQ[1]~reg0.CLK
CLOCK => SRAM_DQ[1]~en.CLK
CLOCK => SRAM_DQ[2]~reg0.CLK
CLOCK => SRAM_DQ[2]~en.CLK
CLOCK => SRAM_DQ[3]~reg0.CLK
CLOCK => SRAM_DQ[3]~en.CLK
CLOCK => SRAM_DQ[4]~reg0.CLK
CLOCK => SRAM_DQ[4]~en.CLK
CLOCK => SRAM_DQ[5]~reg0.CLK
CLOCK => SRAM_DQ[5]~en.CLK
CLOCK => SRAM_DQ[6]~reg0.CLK
CLOCK => SRAM_DQ[6]~en.CLK
CLOCK => SRAM_DQ[7]~reg0.CLK
CLOCK => SRAM_DQ[7]~en.CLK
CLOCK => SRAM_DQ[8]~reg0.CLK
CLOCK => SRAM_DQ[8]~en.CLK
CLOCK => SRAM_DQ[9]~reg0.CLK
CLOCK => SRAM_DQ[9]~en.CLK
CLOCK => SRAM_DQ[10]~reg0.CLK
CLOCK => SRAM_DQ[10]~en.CLK
CLOCK => SRAM_DQ[11]~reg0.CLK
CLOCK => SRAM_DQ[11]~en.CLK
CLOCK => SRAM_DQ[12]~reg0.CLK
CLOCK => SRAM_DQ[12]~en.CLK
CLOCK => SRAM_DQ[13]~reg0.CLK
CLOCK => SRAM_DQ[13]~en.CLK
CLOCK => SRAM_DQ[14]~reg0.CLK
CLOCK => SRAM_DQ[14]~en.CLK
CLOCK => SRAM_DQ[15]~reg0.CLK
CLOCK => SRAM_DQ[15]~en.CLK
CLOCK => SRAM_ADDR[0]~reg0.CLK
CLOCK => SRAM_ADDR[1]~reg0.CLK
CLOCK => SRAM_ADDR[2]~reg0.CLK
CLOCK => SRAM_ADDR[3]~reg0.CLK
CLOCK => SRAM_ADDR[4]~reg0.CLK
CLOCK => SRAM_ADDR[5]~reg0.CLK
CLOCK => SRAM_ADDR[6]~reg0.CLK
CLOCK => SRAM_ADDR[7]~reg0.CLK
CLOCK => SRAM_ADDR[8]~reg0.CLK
CLOCK => SRAM_ADDR[9]~reg0.CLK
CLOCK => SRAM_ADDR[10]~reg0.CLK
CLOCK => SRAM_ADDR[11]~reg0.CLK
CLOCK => SRAM_ADDR[12]~reg0.CLK
CLOCK => SRAM_ADDR[13]~reg0.CLK
CLOCK => SRAM_ADDR[14]~reg0.CLK
CLOCK => SRAM_ADDR[15]~reg0.CLK
CLOCK => SRAM_ADDR[16]~reg0.CLK
CLOCK => SRAM_ADDR[17]~reg0.CLK
CLOCK => SRAM_ADDR[18]~reg0.CLK
CLOCK => SRAM_ADDR[19]~reg0.CLK
CLOCK => SRAM_UB_N~reg0.CLK
CLOCK => SRAM_LB_N~reg0.CLK
RESET_N => SRAM_DQ[0]~en.ACLR
RESET_N => SRAM_DQ[1]~en.ACLR
RESET_N => SRAM_DQ[2]~en.ACLR
RESET_N => SRAM_DQ[3]~en.ACLR
RESET_N => SRAM_DQ[4]~en.ACLR
RESET_N => SRAM_DQ[5]~en.ACLR
RESET_N => SRAM_DQ[6]~en.ACLR
RESET_N => SRAM_DQ[7]~en.ACLR
RESET_N => SRAM_DQ[8]~en.ACLR
RESET_N => SRAM_DQ[9]~en.ACLR
RESET_N => SRAM_DQ[10]~en.ACLR
RESET_N => SRAM_DQ[11]~en.ACLR
RESET_N => SRAM_DQ[12]~en.ACLR
RESET_N => SRAM_DQ[13]~en.ACLR
RESET_N => SRAM_DQ[14]~en.ACLR
RESET_N => SRAM_DQ[15]~en.ACLR
RESET_N => SRAM_UB_N~reg0.PRESET
RESET_N => SRAM_LB_N~reg0.PRESET
RESET_N => DATA_OUT[0]~reg0.ENA
RESET_N => S_ACTION.ENA
RESET_N => DATA_OUT[15]~reg0.ENA
RESET_N => DATA_OUT[14]~reg0.ENA
RESET_N => DATA_OUT[13]~reg0.ENA
RESET_N => DATA_OUT[12]~reg0.ENA
RESET_N => DATA_OUT[11]~reg0.ENA
RESET_N => DATA_OUT[10]~reg0.ENA
RESET_N => DATA_OUT[9]~reg0.ENA
RESET_N => DATA_OUT[8]~reg0.ENA
RESET_N => DATA_OUT[7]~reg0.ENA
RESET_N => DATA_OUT[6]~reg0.ENA
RESET_N => DATA_OUT[5]~reg0.ENA
RESET_N => DATA_OUT[4]~reg0.ENA
RESET_N => DATA_OUT[3]~reg0.ENA
RESET_N => DATA_OUT[2]~reg0.ENA
RESET_N => DATA_OUT[1]~reg0.ENA
DATA_IN[0] => SRAM_DQ[0]~reg0.DATAIN
DATA_IN[1] => SRAM_DQ[1]~reg0.DATAIN
DATA_IN[2] => SRAM_DQ[2]~reg0.DATAIN
DATA_IN[3] => SRAM_DQ[3]~reg0.DATAIN
DATA_IN[4] => SRAM_DQ[4]~reg0.DATAIN
DATA_IN[5] => SRAM_DQ[5]~reg0.DATAIN
DATA_IN[6] => SRAM_DQ[6]~reg0.DATAIN
DATA_IN[7] => SRAM_DQ[7]~reg0.DATAIN
DATA_IN[8] => SRAM_DQ[8]~reg0.DATAIN
DATA_IN[9] => SRAM_DQ[9]~reg0.DATAIN
DATA_IN[10] => SRAM_DQ[10]~reg0.DATAIN
DATA_IN[11] => SRAM_DQ[11]~reg0.DATAIN
DATA_IN[12] => SRAM_DQ[12]~reg0.DATAIN
DATA_IN[13] => SRAM_DQ[13]~reg0.DATAIN
DATA_IN[14] => SRAM_DQ[14]~reg0.DATAIN
DATA_IN[15] => SRAM_DQ[15]~reg0.DATAIN
DATA_OUT[0] <= DATA_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[1] <= DATA_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[2] <= DATA_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[3] <= DATA_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[4] <= DATA_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[5] <= DATA_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[6] <= DATA_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[7] <= DATA_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[8] <= DATA_OUT[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[9] <= DATA_OUT[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[10] <= DATA_OUT[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[11] <= DATA_OUT[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[12] <= DATA_OUT[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[13] <= DATA_OUT[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[14] <= DATA_OUT[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[15] <= DATA_OUT[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADDR[0] => SRAM_ADDR[0]~reg0.DATAIN
ADDR[1] => SRAM_ADDR[1]~reg0.DATAIN
ADDR[2] => SRAM_ADDR[2]~reg0.DATAIN
ADDR[3] => SRAM_ADDR[3]~reg0.DATAIN
ADDR[4] => SRAM_ADDR[4]~reg0.DATAIN
ADDR[5] => SRAM_ADDR[5]~reg0.DATAIN
ADDR[6] => SRAM_ADDR[6]~reg0.DATAIN
ADDR[7] => SRAM_ADDR[7]~reg0.DATAIN
ADDR[8] => SRAM_ADDR[8]~reg0.DATAIN
ADDR[9] => SRAM_ADDR[9]~reg0.DATAIN
ADDR[10] => SRAM_ADDR[10]~reg0.DATAIN
ADDR[11] => SRAM_ADDR[11]~reg0.DATAIN
ADDR[12] => SRAM_ADDR[12]~reg0.DATAIN
ADDR[13] => SRAM_ADDR[13]~reg0.DATAIN
ADDR[14] => SRAM_ADDR[14]~reg0.DATAIN
ADDR[15] => SRAM_ADDR[15]~reg0.DATAIN
ADDR[16] => SRAM_ADDR[16]~reg0.DATAIN
ADDR[17] => SRAM_ADDR[17]~reg0.DATAIN
ADDR[18] => SRAM_ADDR[18]~reg0.DATAIN
ADDR[19] => SRAM_ADDR[19]~reg0.DATAIN
ACTION => S_ACTION.OUTPUTSELECT
ACTION => SRAM_LB_N.OUTPUTSELECT
ACTION => SRAM_UB_N.OUTPUTSELECT
ACTION => SRAM_DQ[0]~en.DATAIN
ACTION => SRAM_DQ[1]~en.DATAIN
ACTION => SRAM_DQ[2]~en.DATAIN
ACTION => SRAM_DQ[3]~en.DATAIN
ACTION => SRAM_DQ[4]~en.DATAIN
ACTION => SRAM_DQ[5]~en.DATAIN
ACTION => SRAM_DQ[6]~en.DATAIN
ACTION => SRAM_DQ[7]~en.DATAIN
ACTION => SRAM_DQ[8]~en.DATAIN
ACTION => SRAM_DQ[9]~en.DATAIN
ACTION => SRAM_DQ[10]~en.DATAIN
ACTION => SRAM_DQ[11]~en.DATAIN
ACTION => SRAM_DQ[12]~en.DATAIN
ACTION => SRAM_DQ[13]~en.DATAIN
ACTION => SRAM_DQ[14]~en.DATAIN
ACTION => SRAM_DQ[15]~en.DATAIN
ACTION => S_ACTION.OUTPUTSELECT
ACTION => SRAM_LB_N.OUTPUTSELECT
ACTION => SRAM_UB_N.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
ACTION => DATA_OUT.OUTPUTSELECT
SRAM_ADDR[0] <= SRAM_ADDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[1] <= SRAM_ADDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[2] <= SRAM_ADDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[3] <= SRAM_ADDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[4] <= SRAM_ADDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[5] <= SRAM_ADDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[6] <= SRAM_ADDR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[7] <= SRAM_ADDR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[8] <= SRAM_ADDR[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[9] <= SRAM_ADDR[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[10] <= SRAM_ADDR[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[11] <= SRAM_ADDR[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[12] <= SRAM_ADDR[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[13] <= SRAM_ADDR[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[14] <= SRAM_ADDR[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[15] <= SRAM_ADDR[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[16] <= SRAM_ADDR[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[17] <= SRAM_ADDR[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[18] <= SRAM_ADDR[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_ADDR[19] <= SRAM_ADDR[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_DQ[0] <> SRAM_DQ[0]
SRAM_DQ[1] <> SRAM_DQ[1]
SRAM_DQ[2] <> SRAM_DQ[2]
SRAM_DQ[3] <> SRAM_DQ[3]
SRAM_DQ[4] <> SRAM_DQ[4]
SRAM_DQ[5] <> SRAM_DQ[5]
SRAM_DQ[6] <> SRAM_DQ[6]
SRAM_DQ[7] <> SRAM_DQ[7]
SRAM_DQ[8] <> SRAM_DQ[8]
SRAM_DQ[9] <> SRAM_DQ[9]
SRAM_DQ[10] <> SRAM_DQ[10]
SRAM_DQ[11] <> SRAM_DQ[11]
SRAM_DQ[12] <> SRAM_DQ[12]
SRAM_DQ[13] <> SRAM_DQ[13]
SRAM_DQ[14] <> SRAM_DQ[14]
SRAM_DQ[15] <> SRAM_DQ[15]
SRAM_CE_N <= <GND>
SRAM_OE_N <= S_ACTION.DB_MAX_OUTPUT_PORT_TYPE
SRAM_WE_N <= S_ACTION.DB_MAX_OUTPUT_PORT_TYPE
SRAM_UB_N <= SRAM_UB_N~reg0.DB_MAX_OUTPUT_PORT_TYPE
SRAM_LB_N <= SRAM_LB_N~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Todo_junto|CIC_SRAM_BLOCK:inst|Sram_CIC_2:inst3
clk => clk_int.CLK
Start => Selector4.IN4
Start => Selector0.IN4
reset => process_1.IN0
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => add_count.OUTPUTSELECT
leer => state.DATAB
leer => state.DATAB
trigger => process_1.IN1
pix_cnt[0] => LessThan0.IN42
pix_cnt[0] => process_1.IN1
pix_cnt[0] => process_1.IN1
pix_cnt[1] => LessThan0.IN41
pix_cnt[2] => LessThan0.IN40
pix_cnt[3] => LessThan0.IN39
pix_cnt[4] => LessThan0.IN38
pix_cnt[5] => LessThan0.IN37
pix_cnt[6] => LessThan0.IN36
pix_cnt[7] => LessThan0.IN35
pix_cnt[8] => LessThan0.IN34
pix_cnt[9] => LessThan0.IN33
pix_cnt[10] => LessThan0.IN32
pix_cnt[11] => LessThan0.IN31
pix_cnt[12] => LessThan0.IN30
pix_cnt[13] => LessThan0.IN29
pix_cnt[14] => LessThan0.IN28
pix_cnt[15] => LessThan0.IN27
pix_cnt[16] => LessThan0.IN26
pix_cnt[17] => LessThan0.IN25
pix_cnt[18] => LessThan0.IN24
pix_cnt[19] => LessThan0.IN23
pix_cnt[20] => LessThan0.IN22
data[0] => data_reg.DATAB
data[0] => data_reg.DATAB
data[1] => data_reg.DATAB
data[1] => data_reg.DATAB
data[2] => data_reg.DATAB
data[2] => data_reg.DATAB
data[3] => data_reg.DATAB
data[3] => data_reg.DATAB
data[4] => data_reg.DATAB
data[4] => data_reg.DATAB
data[5] => data_reg.DATAB
data[5] => data_reg.DATAB
data[6] => data_reg.DATAB
data[6] => data_reg.DATAB
data[7] => data_reg.DATAB
data[7] => data_reg.DATAB
data_o[0] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[1] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[2] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[3] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[4] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[5] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[6] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[7] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[8] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[9] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[10] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[11] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[12] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[13] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[14] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
data_o[15] <= data_o.DB_MAX_OUTPUT_PORT_TYPE
add[0] <= add[0].DB_MAX_OUTPUT_PORT_TYPE
add[1] <= add[1].DB_MAX_OUTPUT_PORT_TYPE
add[2] <= add[2].DB_MAX_OUTPUT_PORT_TYPE
add[3] <= add[3].DB_MAX_OUTPUT_PORT_TYPE
add[4] <= add[4].DB_MAX_OUTPUT_PORT_TYPE
add[5] <= add[5].DB_MAX_OUTPUT_PORT_TYPE
add[6] <= add[6].DB_MAX_OUTPUT_PORT_TYPE
add[7] <= add[7].DB_MAX_OUTPUT_PORT_TYPE
add[8] <= add[8].DB_MAX_OUTPUT_PORT_TYPE
add[9] <= add[9].DB_MAX_OUTPUT_PORT_TYPE
add[10] <= add[10].DB_MAX_OUTPUT_PORT_TYPE
add[11] <= add[11].DB_MAX_OUTPUT_PORT_TYPE
add[12] <= add[12].DB_MAX_OUTPUT_PORT_TYPE
add[13] <= add[13].DB_MAX_OUTPUT_PORT_TYPE
add[14] <= add[14].DB_MAX_OUTPUT_PORT_TYPE
add[15] <= add[15].DB_MAX_OUTPUT_PORT_TYPE
add[16] <= add[16].DB_MAX_OUTPUT_PORT_TYPE
add[17] <= add[17].DB_MAX_OUTPUT_PORT_TYPE
add[18] <= add[18].DB_MAX_OUTPUT_PORT_TYPE
add[19] <= add[19].DB_MAX_OUTPUT_PORT_TYPE
reset_o <= reset_o.DB_MAX_OUTPUT_PORT_TYPE
r_w_O <= r_w_O.DB_MAX_OUTPUT_PORT_TYPE
fin_signal <= fin_signal.DB_MAX_OUTPUT_PORT_TYPE
estado[0] <= estado.DB_MAX_OUTPUT_PORT_TYPE
estado[1] <= estado.DB_MAX_OUTPUT_PORT_TYPE
estado[2] <= estado[2].DB_MAX_OUTPUT_PORT_TYPE
estado[3] <= <GND>


|Todo_junto|CIC_SRAM_BLOCK:inst|Capture_Input_Controller:inst
line_valid => process_0.IN0
frame_valid => process_0.IN1
pclk => d_buff[0].CLK
pclk => d_buff[1].CLK
pclk => d_buff[2].CLK
pclk => d_buff[3].CLK
pclk => d_buff[4].CLK
pclk => d_buff[5].CLK
pclk => d_buff[6].CLK
pclk => d_buff[7].CLK
pclk => pix_count_int[0].CLK
pclk => pix_count_int[1].CLK
pclk => pix_count_int[2].CLK
pclk => pix_count_int[3].CLK
pclk => pix_count_int[4].CLK
pclk => pix_count_int[5].CLK
pclk => pix_count_int[6].CLK
pclk => pix_count_int[7].CLK
pclk => pix_count_int[8].CLK
pclk => pix_count_int[9].CLK
pclk => pix_count_int[10].CLK
pclk => pix_count_int[11].CLK
pclk => pix_count_int[12].CLK
pclk => pix_count_int[13].CLK
pclk => pix_count_int[14].CLK
pclk => pix_count_int[15].CLK
pclk => pix_count_int[16].CLK
pclk => pix_count_int[17].CLK
pclk => pix_count_int[18].CLK
pclk => pix_count_int[19].CLK
pclk => pix_count_int[20].CLK
reset => process_1.IN0
enable => process_0.IN1
enable => d_buff[0].OUTPUTSELECT
enable => d_buff[1].OUTPUTSELECT
enable => d_buff[2].OUTPUTSELECT
enable => d_buff[3].OUTPUTSELECT
enable => d_buff[4].OUTPUTSELECT
enable => d_buff[5].OUTPUTSELECT
enable => d_buff[6].OUTPUTSELECT
enable => d_buff[7].OUTPUTSELECT
enable => pix_count_int[0].ENA
enable => pix_count_int[1].ENA
enable => pix_count_int[2].ENA
enable => pix_count_int[3].ENA
enable => pix_count_int[4].ENA
enable => pix_count_int[5].ENA
enable => pix_count_int[6].ENA
enable => pix_count_int[7].ENA
enable => pix_count_int[8].ENA
enable => pix_count_int[9].ENA
enable => pix_count_int[10].ENA
enable => pix_count_int[11].ENA
enable => pix_count_int[12].ENA
enable => pix_count_int[13].ENA
enable => pix_count_int[14].ENA
enable => pix_count_int[15].ENA
enable => pix_count_int[16].ENA
enable => pix_count_int[17].ENA
enable => pix_count_int[18].ENA
enable => pix_count_int[19].ENA
enable => pix_count_int[20].ENA
trigger => process_1.IN1
leer <= process_0.DB_MAX_OUTPUT_PORT_TYPE
D_in[0] => d_buff.DATAB
D_in[1] => d_buff.DATAB
D_in[2] => d_buff.DATAB
D_in[3] => d_buff.DATAB
D_in[4] => d_buff.DATAB
D_in[5] => d_buff.DATAB
D_in[6] => d_buff.DATAB
D_in[7] => d_buff.DATAB
pix_count[0] <= pix_count_int[0].DB_MAX_OUTPUT_PORT_TYPE
pix_count[1] <= pix_count_int[1].DB_MAX_OUTPUT_PORT_TYPE
pix_count[2] <= pix_count_int[2].DB_MAX_OUTPUT_PORT_TYPE
pix_count[3] <= pix_count_int[3].DB_MAX_OUTPUT_PORT_TYPE
pix_count[4] <= pix_count_int[4].DB_MAX_OUTPUT_PORT_TYPE
pix_count[5] <= pix_count_int[5].DB_MAX_OUTPUT_PORT_TYPE
pix_count[6] <= pix_count_int[6].DB_MAX_OUTPUT_PORT_TYPE
pix_count[7] <= pix_count_int[7].DB_MAX_OUTPUT_PORT_TYPE
pix_count[8] <= pix_count_int[8].DB_MAX_OUTPUT_PORT_TYPE
pix_count[9] <= pix_count_int[9].DB_MAX_OUTPUT_PORT_TYPE
pix_count[10] <= pix_count_int[10].DB_MAX_OUTPUT_PORT_TYPE
pix_count[11] <= pix_count_int[11].DB_MAX_OUTPUT_PORT_TYPE
pix_count[12] <= pix_count_int[12].DB_MAX_OUTPUT_PORT_TYPE
pix_count[13] <= pix_count_int[13].DB_MAX_OUTPUT_PORT_TYPE
pix_count[14] <= pix_count_int[14].DB_MAX_OUTPUT_PORT_TYPE
pix_count[15] <= pix_count_int[15].DB_MAX_OUTPUT_PORT_TYPE
pix_count[16] <= pix_count_int[16].DB_MAX_OUTPUT_PORT_TYPE
pix_count[17] <= pix_count_int[17].DB_MAX_OUTPUT_PORT_TYPE
pix_count[18] <= pix_count_int[18].DB_MAX_OUTPUT_PORT_TYPE
pix_count[19] <= pix_count_int[19].DB_MAX_OUTPUT_PORT_TYPE
pix_count[20] <= pix_count_int[20].DB_MAX_OUTPUT_PORT_TYPE
D_out[0] <= d_buff[0].DB_MAX_OUTPUT_PORT_TYPE
D_out[1] <= d_buff[1].DB_MAX_OUTPUT_PORT_TYPE
D_out[2] <= d_buff[2].DB_MAX_OUTPUT_PORT_TYPE
D_out[3] <= d_buff[3].DB_MAX_OUTPUT_PORT_TYPE
D_out[4] <= d_buff[4].DB_MAX_OUTPUT_PORT_TYPE
D_out[5] <= d_buff[5].DB_MAX_OUTPUT_PORT_TYPE
D_out[6] <= d_buff[6].DB_MAX_OUTPUT_PORT_TYPE
D_out[7] <= d_buff[7].DB_MAX_OUTPUT_PORT_TYPE


|Todo_junto|decodificador:inst3
numero[0] => num_int.DATAB
numero[1] => num_int.DATAB
numero[2] => num_int.DATAB
numero[3] => num_int.DATAB
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
valido => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
reset => num_int.OUTPUTSELECT
clk => num_int[0].CLK
clk => num_int[1].CLK
clk => num_int[2].CLK
clk => num_int[3].CLK
output[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= <VCC>


