|top_4
tx_uart <= uart_tx:inst5.uart_txd
clk => uart_tx:inst5.clk
clk => algoritmo_3:inst.clk_i
clk => ram:inst1.clk
clk => uart_algo:inst8.clk
clk => UART_RX:inst4.i_Clk
clk => clock_divider:inst2.clk_in
reset => uart_tx:inst5.resetn
reset => algoritmo_3:inst.reset_i
reset => uart_algo:inst8.reset
reset => clock_divider:inst2.reset
rx_uart => UART_RX:inst4.i_RX_Serial
clk_signal_tap <= clock_divider:inst2.clk_out
addr_ram[0] <= algoritmo_3:inst.mem_addr_o[0]
addr_ram[1] <= algoritmo_3:inst.mem_addr_o[1]
addr_ram[2] <= algoritmo_3:inst.mem_addr_o[2]
addr_ram[3] <= algoritmo_3:inst.mem_addr_o[3]
addr_ram[4] <= algoritmo_3:inst.mem_addr_o[4]
addr_ram[5] <= algoritmo_3:inst.mem_addr_o[5]
addr_ram[6] <= algoritmo_3:inst.mem_addr_o[6]
addr_ram[7] <= algoritmo_3:inst.mem_addr_o[7]
addr_ram[8] <= algoritmo_3:inst.mem_addr_o[8]
addr_ram[9] <= algoritmo_3:inst.mem_addr_o[9]
addr_ram[10] <= algoritmo_3:inst.mem_addr_o[10]
data_ram[0] <= data_tx[0].DB_MAX_OUTPUT_PORT_TYPE
data_ram[1] <= data_tx[1].DB_MAX_OUTPUT_PORT_TYPE
data_ram[2] <= data_tx[2].DB_MAX_OUTPUT_PORT_TYPE
data_ram[3] <= data_tx[3].DB_MAX_OUTPUT_PORT_TYPE
data_ram[4] <= data_tx[4].DB_MAX_OUTPUT_PORT_TYPE
data_ram[5] <= data_tx[5].DB_MAX_OUTPUT_PORT_TYPE
data_ram[6] <= data_tx[6].DB_MAX_OUTPUT_PORT_TYPE
data_ram[7] <= data_tx[7].DB_MAX_OUTPUT_PORT_TYPE
data_ram[8] <= data_tx[8].DB_MAX_OUTPUT_PORT_TYPE
data_ram[9] <= data_tx[9].DB_MAX_OUTPUT_PORT_TYPE
data_ram[10] <= data_tx[10].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[0] <= FIFO_data[0].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[1] <= FIFO_data[1].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[2] <= FIFO_data[2].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[3] <= FIFO_data[3].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[4] <= FIFO_data[4].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[5] <= FIFO_data[5].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[6] <= FIFO_data[6].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[7] <= FIFO_data[7].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[8] <= FIFO_data[8].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[9] <= FIFO_data[9].DB_MAX_OUTPUT_PORT_TYPE
fifo_led[10] <= FIFO_data[10].DB_MAX_OUTPUT_PORT_TYPE


|top_4|uart_tx:inst5
clk => txd_reg.CLK
clk => cycle_counter[0].CLK
clk => cycle_counter[1].CLK
clk => cycle_counter[2].CLK
clk => cycle_counter[3].CLK
clk => cycle_counter[4].CLK
clk => cycle_counter[5].CLK
clk => cycle_counter[6].CLK
clk => cycle_counter[7].CLK
clk => cycle_counter[8].CLK
clk => cycle_counter[9].CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
clk => data_to_send[0].CLK
clk => data_to_send[1].CLK
clk => data_to_send[2].CLK
clk => data_to_send[3].CLK
clk => data_to_send[4].CLK
clk => data_to_send[5].CLK
clk => data_to_send[6].CLK
clk => data_to_send[7].CLK
clk => fsm_state~1.DATAIN
resetn => txd_reg.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => data_to_send.OUTPUTSELECT
resetn => bit_counter.OUTPUTSELECT
resetn => bit_counter.OUTPUTSELECT
resetn => bit_counter.OUTPUTSELECT
resetn => bit_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => cycle_counter.OUTPUTSELECT
resetn => fsm_state.OUTPUTSELECT
resetn => fsm_state.OUTPUTSELECT
resetn => fsm_state.OUTPUTSELECT
resetn => fsm_state.OUTPUTSELECT
uart_txd <= txd_reg.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_busy <= uart_tx_busy.DB_MAX_OUTPUT_PORT_TYPE
uart_tx_en => always1.IN0
uart_tx_en => Selector1.IN3
uart_tx_en => Selector0.IN1
uart_tx_data[0] => data_to_send.DATAB
uart_tx_data[1] => data_to_send.DATAB
uart_tx_data[2] => data_to_send.DATAB
uart_tx_data[3] => data_to_send.DATAB
uart_tx_data[4] => data_to_send.DATAB
uart_tx_data[5] => data_to_send.DATAB
uart_tx_data[6] => data_to_send.DATAB
uart_tx_data[7] => data_to_send.DATAB


|top_4|algoritmo_3:inst
clk_i => envio~reg0.CLK
clk_i => mem_R_W~reg0.CLK
clk_i => mem_addr_o[0]~reg0.CLK
clk_i => mem_addr_o[1]~reg0.CLK
clk_i => mem_addr_o[2]~reg0.CLK
clk_i => mem_addr_o[3]~reg0.CLK
clk_i => mem_addr_o[4]~reg0.CLK
clk_i => mem_addr_o[5]~reg0.CLK
clk_i => mem_addr_o[6]~reg0.CLK
clk_i => mem_addr_o[7]~reg0.CLK
clk_i => mem_addr_o[8]~reg0.CLK
clk_i => mem_addr_o[9]~reg0.CLK
clk_i => mem_addr_o[10]~reg0.CLK
clk_i => mem_data_o[0]~reg0.CLK
clk_i => mem_data_o[1]~reg0.CLK
clk_i => mem_data_o[2]~reg0.CLK
clk_i => mem_data_o[3]~reg0.CLK
clk_i => mem_data_o[4]~reg0.CLK
clk_i => mem_data_o[5]~reg0.CLK
clk_i => mem_data_o[6]~reg0.CLK
clk_i => mem_data_o[7]~reg0.CLK
clk_i => mem_data_o[8]~reg0.CLK
clk_i => mem_data_o[9]~reg0.CLK
clk_i => mem_data_o[10]~reg0.CLK
clk_i => pix_ant[0].CLK
clk_i => pix_ant[1].CLK
clk_i => pix_ant[2].CLK
clk_i => pix_ant[3].CLK
clk_i => pix_ant[4].CLK
clk_i => pix_ant[5].CLK
clk_i => pix_ant[6].CLK
clk_i => pix_ant[7].CLK
clk_i => pix_ant[8].CLK
clk_i => pix_ant[9].CLK
clk_i => pix_ant[10].CLK
clk_i => pix_ant[11].CLK
clk_i => pix_ant[12].CLK
clk_i => pix_ant[13].CLK
clk_i => pix_ant[14].CLK
clk_i => pix_ant[15].CLK
clk_i => pix_ant[16].CLK
clk_i => pix_ant[17].CLK
clk_i => pix_ant[18].CLK
clk_i => pix_ant[19].CLK
clk_i => pix_ant[20].CLK
clk_i => borrado.CLK
clk_i => fifo_pos_descarga[0].CLK
clk_i => fifo_pos_descarga[1].CLK
clk_i => fifo_pos_descarga[2].CLK
clk_i => fifo_pos_descarga[3].CLK
clk_i => fifo_pos_descarga[4].CLK
clk_i => fifo_pos_descarga[5].CLK
clk_i => fifo_pos_descarga[6].CLK
clk_i => fifo_data_escr[0].CLK
clk_i => fifo_data_escr[1].CLK
clk_i => fifo_data_escr[2].CLK
clk_i => fifo_data_escr[3].CLK
clk_i => fifo_data_escr[4].CLK
clk_i => fifo_data_escr[5].CLK
clk_i => fifo_data_escr[6].CLK
clk_i => fifo_data_escr[7].CLK
clk_i => fifo_data_escr[8].CLK
clk_i => fifo_data_escr[9].CLK
clk_i => fifo_data_escr[10].CLK
clk_i => mem_addr_int[0].CLK
clk_i => mem_addr_int[1].CLK
clk_i => mem_addr_int[2].CLK
clk_i => mem_addr_int[3].CLK
clk_i => mem_addr_int[4].CLK
clk_i => mem_addr_int[5].CLK
clk_i => mem_addr_int[6].CLK
clk_i => mem_addr_int[7].CLK
clk_i => mem_addr_int[8].CLK
clk_i => mem_addr_int[9].CLK
clk_i => mem_addr_int[10].CLK
clk_i => fifo_pos[0].CLK
clk_i => fifo_pos[1].CLK
clk_i => fifo_pos[2].CLK
clk_i => fifo_pos[3].CLK
clk_i => fifo_pos[4].CLK
clk_i => fifo_pos[5].CLK
clk_i => fifo_pos[6].CLK
clk_i => indice[0].CLK
clk_i => indice[1].CLK
clk_i => indice[2].CLK
clk_i => indice[3].CLK
clk_i => indice[4].CLK
clk_i => indice[5].CLK
clk_i => indice[6].CLK
clk_i => indice[7].CLK
clk_i => indice[8].CLK
clk_i => indice[9].CLK
clk_i => indice[10].CLK
clk_i => reg_10_3[0].CLK
clk_i => reg_10_3[1].CLK
clk_i => reg_10_3[2].CLK
clk_i => reg_10_3[3].CLK
clk_i => reg_10_3[4].CLK
clk_i => reg_10_3[5].CLK
clk_i => reg_10_3[6].CLK
clk_i => reg_10_3[7].CLK
clk_i => reg_10_3[8].CLK
clk_i => reg_10_3[9].CLK
clk_i => reg_10_3[10].CLK
clk_i => reg_10_2[0].CLK
clk_i => reg_10_2[1].CLK
clk_i => reg_10_2[2].CLK
clk_i => reg_10_2[3].CLK
clk_i => reg_10_2[4].CLK
clk_i => reg_10_2[5].CLK
clk_i => reg_10_2[6].CLK
clk_i => reg_10_2[7].CLK
clk_i => reg_10_2[8].CLK
clk_i => reg_10_2[9].CLK
clk_i => reg_10_2[10].CLK
clk_i => reg_10_1[0].CLK
clk_i => reg_10_1[1].CLK
clk_i => reg_10_1[2].CLK
clk_i => reg_10_1[3].CLK
clk_i => reg_10_1[4].CLK
clk_i => reg_10_1[5].CLK
clk_i => reg_10_1[6].CLK
clk_i => reg_10_1[7].CLK
clk_i => reg_10_1[8].CLK
clk_i => reg_10_1[9].CLK
clk_i => reg_10_1[10].CLK
clk_i => reg_anterior[0].CLK
clk_i => reg_anterior[1].CLK
clk_i => reg_anterior[2].CLK
clk_i => reg_anterior[3].CLK
clk_i => reg_anterior[4].CLK
clk_i => reg_anterior[5].CLK
clk_i => reg_anterior[6].CLK
clk_i => reg_anterior[7].CLK
clk_i => reg_anterior[8].CLK
clk_i => reg_anterior[9].CLK
clk_i => reg_anterior[10].CLK
clk_i => state~1.DATAIN
reset_i => pix_ant[0].ACLR
reset_i => pix_ant[1].ACLR
reset_i => pix_ant[2].ACLR
reset_i => pix_ant[3].ACLR
reset_i => pix_ant[4].PRESET
reset_i => pix_ant[5].ACLR
reset_i => pix_ant[6].ACLR
reset_i => pix_ant[7].ACLR
reset_i => pix_ant[8].ACLR
reset_i => pix_ant[9].ACLR
reset_i => pix_ant[10].ACLR
reset_i => pix_ant[11].ACLR
reset_i => pix_ant[12].ACLR
reset_i => pix_ant[13].ACLR
reset_i => pix_ant[14].ACLR
reset_i => pix_ant[15].ACLR
reset_i => pix_ant[16].ACLR
reset_i => pix_ant[17].ACLR
reset_i => pix_ant[18].ACLR
reset_i => pix_ant[19].ACLR
reset_i => pix_ant[20].ACLR
reset_i => borrado.ACLR
reset_i => fifo_pos_descarga[0].ACLR
reset_i => fifo_pos_descarga[1].ACLR
reset_i => fifo_pos_descarga[2].ACLR
reset_i => fifo_pos_descarga[3].ACLR
reset_i => fifo_pos_descarga[4].ACLR
reset_i => fifo_pos_descarga[5].ACLR
reset_i => fifo_pos_descarga[6].ACLR
reset_i => fifo_data_escr[0].ACLR
reset_i => fifo_data_escr[1].ACLR
reset_i => fifo_data_escr[2].ACLR
reset_i => fifo_data_escr[3].ACLR
reset_i => fifo_data_escr[4].ACLR
reset_i => fifo_data_escr[5].ACLR
reset_i => fifo_data_escr[6].ACLR
reset_i => fifo_data_escr[7].ACLR
reset_i => fifo_data_escr[8].ACLR
reset_i => fifo_data_escr[9].ACLR
reset_i => fifo_data_escr[10].ACLR
reset_i => mem_addr_int[0].ACLR
reset_i => mem_addr_int[1].ACLR
reset_i => mem_addr_int[2].ACLR
reset_i => mem_addr_int[3].ACLR
reset_i => mem_addr_int[4].ACLR
reset_i => mem_addr_int[5].ACLR
reset_i => mem_addr_int[6].ACLR
reset_i => mem_addr_int[7].ACLR
reset_i => mem_addr_int[8].ACLR
reset_i => mem_addr_int[9].ACLR
reset_i => mem_addr_int[10].ACLR
reset_i => fifo_pos[0].ACLR
reset_i => fifo_pos[1].ACLR
reset_i => fifo_pos[2].ACLR
reset_i => fifo_pos[3].ACLR
reset_i => fifo_pos[4].ACLR
reset_i => fifo_pos[5].ACLR
reset_i => fifo_pos[6].ACLR
reset_i => indice[0].PRESET
reset_i => indice[1].ACLR
reset_i => indice[2].ACLR
reset_i => indice[3].ACLR
reset_i => indice[4].ACLR
reset_i => indice[5].ACLR
reset_i => indice[6].ACLR
reset_i => indice[7].ACLR
reset_i => indice[8].ACLR
reset_i => indice[9].ACLR
reset_i => indice[10].ACLR
reset_i => reg_10_3[0].ACLR
reset_i => reg_10_3[1].ACLR
reset_i => reg_10_3[2].ACLR
reset_i => reg_10_3[3].ACLR
reset_i => reg_10_3[4].ACLR
reset_i => reg_10_3[5].ACLR
reset_i => reg_10_3[6].ACLR
reset_i => reg_10_3[7].ACLR
reset_i => reg_10_3[8].ACLR
reset_i => reg_10_3[9].ACLR
reset_i => reg_10_3[10].ACLR
reset_i => reg_10_2[0].ACLR
reset_i => reg_10_2[1].ACLR
reset_i => reg_10_2[2].ACLR
reset_i => reg_10_2[3].ACLR
reset_i => reg_10_2[4].ACLR
reset_i => reg_10_2[5].ACLR
reset_i => reg_10_2[6].ACLR
reset_i => reg_10_2[7].ACLR
reset_i => reg_10_2[8].ACLR
reset_i => reg_10_2[9].ACLR
reset_i => reg_10_2[10].ACLR
reset_i => reg_10_1[0].ACLR
reset_i => reg_10_1[1].ACLR
reset_i => reg_10_1[2].ACLR
reset_i => reg_10_1[3].ACLR
reset_i => reg_10_1[4].ACLR
reset_i => reg_10_1[5].ACLR
reset_i => reg_10_1[6].ACLR
reset_i => reg_10_1[7].ACLR
reset_i => reg_10_1[8].ACLR
reset_i => reg_10_1[9].ACLR
reset_i => reg_10_1[10].ACLR
reset_i => reg_anterior[0].ACLR
reset_i => reg_anterior[1].ACLR
reset_i => reg_anterior[2].ACLR
reset_i => reg_anterior[3].ACLR
reset_i => reg_anterior[4].ACLR
reset_i => reg_anterior[5].ACLR
reset_i => reg_anterior[6].ACLR
reset_i => reg_anterior[7].ACLR
reset_i => reg_anterior[8].ACLR
reset_i => reg_anterior[9].ACLR
reset_i => reg_anterior[10].ACLR
reset_i => state~3.DATAIN
reset_i => envio~reg0.ENA
reset_i => mem_data_o[10]~reg0.ENA
reset_i => mem_data_o[9]~reg0.ENA
reset_i => mem_data_o[8]~reg0.ENA
reset_i => mem_data_o[7]~reg0.ENA
reset_i => mem_data_o[6]~reg0.ENA
reset_i => mem_data_o[5]~reg0.ENA
reset_i => mem_data_o[4]~reg0.ENA
reset_i => mem_data_o[3]~reg0.ENA
reset_i => mem_data_o[2]~reg0.ENA
reset_i => mem_data_o[1]~reg0.ENA
reset_i => mem_data_o[0]~reg0.ENA
reset_i => mem_addr_o[10]~reg0.ENA
reset_i => mem_addr_o[9]~reg0.ENA
reset_i => mem_addr_o[8]~reg0.ENA
reset_i => mem_addr_o[7]~reg0.ENA
reset_i => mem_addr_o[6]~reg0.ENA
reset_i => mem_addr_o[5]~reg0.ENA
reset_i => mem_addr_o[4]~reg0.ENA
reset_i => mem_addr_o[3]~reg0.ENA
reset_i => mem_addr_o[2]~reg0.ENA
reset_i => mem_addr_o[1]~reg0.ENA
reset_i => mem_addr_o[0]~reg0.ENA
reset_i => mem_R_W~reg0.ENA
pix_cnt_i[0] => Equal0.IN20
pix_cnt_i[0] => pix_ant.DATAA
pix_cnt_i[1] => Equal0.IN19
pix_cnt_i[1] => pix_ant.DATAA
pix_cnt_i[2] => Equal0.IN18
pix_cnt_i[2] => pix_ant.DATAA
pix_cnt_i[3] => Equal0.IN17
pix_cnt_i[3] => pix_ant.DATAA
pix_cnt_i[4] => Equal0.IN16
pix_cnt_i[4] => pix_ant.DATAA
pix_cnt_i[5] => Equal0.IN15
pix_cnt_i[5] => pix_ant.DATAA
pix_cnt_i[6] => Equal0.IN14
pix_cnt_i[6] => pix_ant.DATAA
pix_cnt_i[7] => Equal0.IN13
pix_cnt_i[7] => pix_ant.DATAA
pix_cnt_i[8] => Equal0.IN12
pix_cnt_i[8] => pix_ant.DATAA
pix_cnt_i[9] => Equal0.IN11
pix_cnt_i[9] => pix_ant.DATAA
pix_cnt_i[10] => Equal0.IN10
pix_cnt_i[10] => pix_ant.DATAA
pix_cnt_i[11] => Equal0.IN9
pix_cnt_i[11] => pix_ant.DATAA
pix_cnt_i[12] => Equal0.IN8
pix_cnt_i[12] => pix_ant.DATAA
pix_cnt_i[13] => Equal0.IN7
pix_cnt_i[13] => pix_ant.DATAA
pix_cnt_i[14] => Equal0.IN6
pix_cnt_i[14] => pix_ant.DATAA
pix_cnt_i[15] => Equal0.IN5
pix_cnt_i[15] => pix_ant.DATAA
pix_cnt_i[16] => Equal0.IN4
pix_cnt_i[16] => pix_ant.DATAA
pix_cnt_i[17] => Equal0.IN3
pix_cnt_i[17] => pix_ant.DATAA
pix_cnt_i[18] => Equal0.IN2
pix_cnt_i[18] => pix_ant.DATAA
pix_cnt_i[19] => Equal0.IN1
pix_cnt_i[19] => pix_ant.DATAA
pix_cnt_i[20] => Equal0.IN0
pix_cnt_i[20] => pix_ant.DATAA
pix_data_i[0] => LessThan1.IN16
pix_data_i[1] => LessThan1.IN15
pix_data_i[2] => LessThan1.IN14
pix_data_i[3] => LessThan1.IN13
pix_data_i[4] => LessThan1.IN12
pix_data_i[5] => LessThan1.IN11
pix_data_i[6] => LessThan1.IN10
pix_data_i[7] => LessThan1.IN9
mem_data_i[0] => reg_anterior[0].DATAIN
mem_data_i[0] => reg_10_1[0].DATAIN
mem_data_i[0] => reg_10_2[0].DATAIN
mem_data_i[0] => reg_10_3[0].DATAIN
mem_data_i[1] => reg_anterior[1].DATAIN
mem_data_i[1] => reg_10_1[1].DATAIN
mem_data_i[1] => reg_10_2[1].DATAIN
mem_data_i[1] => reg_10_3[1].DATAIN
mem_data_i[2] => reg_anterior[2].DATAIN
mem_data_i[2] => reg_10_1[2].DATAIN
mem_data_i[2] => reg_10_2[2].DATAIN
mem_data_i[2] => reg_10_3[2].DATAIN
mem_data_i[3] => reg_anterior[3].DATAIN
mem_data_i[3] => reg_10_1[3].DATAIN
mem_data_i[3] => reg_10_2[3].DATAIN
mem_data_i[3] => reg_10_3[3].DATAIN
mem_data_i[4] => reg_anterior[4].DATAIN
mem_data_i[4] => reg_10_1[4].DATAIN
mem_data_i[4] => reg_10_2[4].DATAIN
mem_data_i[4] => reg_10_3[4].DATAIN
mem_data_i[5] => reg_anterior[5].DATAIN
mem_data_i[5] => reg_10_1[5].DATAIN
mem_data_i[5] => reg_10_2[5].DATAIN
mem_data_i[5] => reg_10_3[5].DATAIN
mem_data_i[6] => reg_anterior[6].DATAIN
mem_data_i[6] => reg_10_1[6].DATAIN
mem_data_i[6] => reg_10_2[6].DATAIN
mem_data_i[6] => reg_10_3[6].DATAIN
mem_data_i[7] => reg_anterior[7].DATAIN
mem_data_i[7] => reg_10_1[7].DATAIN
mem_data_i[7] => reg_10_2[7].DATAIN
mem_data_i[7] => reg_10_3[7].DATAIN
mem_data_i[8] => reg_anterior[8].DATAIN
mem_data_i[8] => reg_10_1[8].DATAIN
mem_data_i[8] => reg_10_2[8].DATAIN
mem_data_i[8] => reg_10_3[8].DATAIN
mem_data_i[9] => reg_anterior[9].DATAIN
mem_data_i[9] => reg_10_1[9].DATAIN
mem_data_i[9] => reg_10_2[9].DATAIN
mem_data_i[9] => reg_10_3[9].DATAIN
mem_data_i[10] => reg_anterior[10].DATAIN
mem_data_i[10] => reg_10_1[10].DATAIN
mem_data_i[10] => reg_10_2[10].DATAIN
mem_data_i[10] => reg_10_3[10].DATAIN
uart_tx_busy => Selector9.IN3
uart_tx_busy => Selector10.IN3
uart_tx_busy => fifo_pos.OUTPUTSELECT
uart_tx_busy => fifo_pos.OUTPUTSELECT
uart_tx_busy => fifo_pos.OUTPUTSELECT
uart_tx_busy => fifo_pos.OUTPUTSELECT
uart_tx_busy => fifo_pos.OUTPUTSELECT
uart_tx_busy => fifo_pos.OUTPUTSELECT
uart_tx_busy => fifo_pos.OUTPUTSELECT
uart_tx_busy => Selector7.IN3
uart_tx_busy => state.OUTPUTSELECT
uart_tx_busy => state.OUTPUTSELECT
uart_tx_busy => fifo_pos_descarga.OUTPUTSELECT
uart_tx_busy => fifo_pos_descarga.OUTPUTSELECT
uart_tx_busy => fifo_pos_descarga.OUTPUTSELECT
uart_tx_busy => fifo_pos_descarga.OUTPUTSELECT
uart_tx_busy => fifo_pos_descarga.OUTPUTSELECT
uart_tx_busy => fifo_pos_descarga.OUTPUTSELECT
uart_tx_busy => fifo_pos_descarga.OUTPUTSELECT
mem_data_o[0] <= mem_data_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[1] <= mem_data_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[2] <= mem_data_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[3] <= mem_data_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[4] <= mem_data_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[5] <= mem_data_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[6] <= mem_data_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[7] <= mem_data_o[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[8] <= mem_data_o[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[9] <= mem_data_o[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_o[10] <= mem_data_o[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[0] <= mem_addr_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[1] <= mem_addr_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[2] <= mem_addr_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[3] <= mem_addr_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[4] <= mem_addr_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[5] <= mem_addr_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[6] <= mem_addr_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[7] <= mem_addr_o[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[8] <= mem_addr_o[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[9] <= mem_addr_o[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_addr_o[10] <= mem_addr_o[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_R_W <= mem_R_W~reg0.DB_MAX_OUTPUT_PORT_TYPE
envio <= envio~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_4|ram:inst1
din[0] => mem.data_a[0].DATAIN
din[0] => mem.DATAIN
din[1] => mem.data_a[1].DATAIN
din[1] => mem.DATAIN1
din[2] => mem.data_a[2].DATAIN
din[2] => mem.DATAIN2
din[3] => mem.data_a[3].DATAIN
din[3] => mem.DATAIN3
din[4] => mem.data_a[4].DATAIN
din[4] => mem.DATAIN4
din[5] => mem.data_a[5].DATAIN
din[5] => mem.DATAIN5
din[6] => mem.data_a[6].DATAIN
din[6] => mem.DATAIN6
din[7] => mem.data_a[7].DATAIN
din[7] => mem.DATAIN7
din[8] => mem.data_a[8].DATAIN
din[8] => mem.DATAIN8
din[9] => mem.data_a[9].DATAIN
din[9] => mem.DATAIN9
din[10] => mem.data_a[10].DATAIN
din[10] => mem.DATAIN10
addr[0] => mem.waddr_a[0].DATAIN
addr[0] => mem.WADDR
addr[0] => mem.RADDR
addr[1] => mem.waddr_a[1].DATAIN
addr[1] => mem.WADDR1
addr[1] => mem.RADDR1
addr[2] => mem.waddr_a[2].DATAIN
addr[2] => mem.WADDR2
addr[2] => mem.RADDR2
addr[3] => mem.waddr_a[3].DATAIN
addr[3] => mem.WADDR3
addr[3] => mem.RADDR3
addr[4] => mem.waddr_a[4].DATAIN
addr[4] => mem.WADDR4
addr[4] => mem.RADDR4
addr[5] => mem.waddr_a[5].DATAIN
addr[5] => mem.WADDR5
addr[5] => mem.RADDR5
addr[6] => mem.waddr_a[6].DATAIN
addr[6] => mem.WADDR6
addr[6] => mem.RADDR6
addr[7] => mem.waddr_a[7].DATAIN
addr[7] => mem.WADDR7
addr[7] => mem.RADDR7
addr[8] => mem.waddr_a[8].DATAIN
addr[8] => mem.WADDR8
addr[8] => mem.RADDR8
addr[9] => mem.waddr_a[9].DATAIN
addr[9] => mem.WADDR9
addr[9] => mem.RADDR9
addr[10] => mem.waddr_a[10].DATAIN
addr[10] => mem.WADDR10
addr[10] => mem.RADDR10
write_en => mem.we_a.DATAIN
write_en => mem.WE
clk => mem.we_a.CLK
clk => mem.waddr_a[10].CLK
clk => mem.waddr_a[9].CLK
clk => mem.waddr_a[8].CLK
clk => mem.waddr_a[7].CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[10].CLK
clk => mem.data_a[9].CLK
clk => mem.data_a[8].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => dout[8]~reg0.CLK
clk => dout[9]~reg0.CLK
clk => dout[10]~reg0.CLK
clk => mem.CLK0
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[8] <= dout[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[9] <= dout[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[10] <= dout[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top_4|uart_algo:inst8
clk => reg_data[0].CLK
clk => reg_data[1].CLK
clk => reg_data[2].CLK
clk => reg_data[3].CLK
clk => reg_data[4].CLK
clk => reg_data[5].CLK
clk => reg_data[6].CLK
clk => reg_data[7].CLK
clk => pix_count_int[0].CLK
clk => pix_count_int[1].CLK
clk => pix_count_int[2].CLK
clk => pix_count_int[3].CLK
clk => pix_count_int[4].CLK
clk => pix_count_int[5].CLK
clk => pix_count_int[6].CLK
clk => state.CLK
reset => reg_data[0].ACLR
reset => reg_data[1].ACLR
reset => reg_data[2].ACLR
reset => reg_data[3].ACLR
reset => reg_data[4].ACLR
reset => reg_data[5].ACLR
reset => reg_data[6].ACLR
reset => reg_data[7].ACLR
reset => pix_count_int[0].ACLR
reset => pix_count_int[1].ACLR
reset => pix_count_int[2].ACLR
reset => pix_count_int[3].ACLR
reset => pix_count_int[4].ACLR
reset => pix_count_int[5].ACLR
reset => pix_count_int[6].ACLR
reset => state.ACLR
rx_dv => pix_count_int.OUTPUTSELECT
rx_dv => pix_count_int.OUTPUTSELECT
rx_dv => pix_count_int.OUTPUTSELECT
rx_dv => pix_count_int.OUTPUTSELECT
rx_dv => pix_count_int.OUTPUTSELECT
rx_dv => pix_count_int.OUTPUTSELECT
rx_dv => pix_count_int.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => reg_data.OUTPUTSELECT
rx_dv => state.DATAB
rx_byte[0] => reg_data.DATAB
rx_byte[1] => reg_data.DATAB
rx_byte[2] => reg_data.DATAB
rx_byte[3] => reg_data.DATAB
rx_byte[4] => reg_data.DATAB
rx_byte[5] => reg_data.DATAB
rx_byte[6] => reg_data.DATAB
rx_byte[7] => reg_data.DATAB
pix_count[0] <= pix_count_int[0].DB_MAX_OUTPUT_PORT_TYPE
pix_count[1] <= pix_count_int[1].DB_MAX_OUTPUT_PORT_TYPE
pix_count[2] <= pix_count_int[2].DB_MAX_OUTPUT_PORT_TYPE
pix_count[3] <= pix_count_int[3].DB_MAX_OUTPUT_PORT_TYPE
pix_count[4] <= pix_count_int[4].DB_MAX_OUTPUT_PORT_TYPE
pix_count[5] <= pix_count_int[5].DB_MAX_OUTPUT_PORT_TYPE
pix_count[6] <= pix_count_int[6].DB_MAX_OUTPUT_PORT_TYPE
pix_count[7] <= <GND>
pix_count[8] <= <GND>
pix_count[9] <= <GND>
pix_count[10] <= <GND>
pix_count[11] <= <GND>
pix_count[12] <= <GND>
pix_count[13] <= <GND>
pix_count[14] <= <GND>
pix_count[15] <= <GND>
pix_count[16] <= <GND>
pix_count[17] <= <GND>
pix_count[18] <= <GND>
pix_count[19] <= <GND>
pix_count[20] <= <GND>
byte_o[0] <= reg_data[0].DB_MAX_OUTPUT_PORT_TYPE
byte_o[1] <= reg_data[1].DB_MAX_OUTPUT_PORT_TYPE
byte_o[2] <= reg_data[2].DB_MAX_OUTPUT_PORT_TYPE
byte_o[3] <= reg_data[3].DB_MAX_OUTPUT_PORT_TYPE
byte_o[4] <= reg_data[4].DB_MAX_OUTPUT_PORT_TYPE
byte_o[5] <= reg_data[5].DB_MAX_OUTPUT_PORT_TYPE
byte_o[6] <= reg_data[6].DB_MAX_OUTPUT_PORT_TYPE
byte_o[7] <= reg_data[7].DB_MAX_OUTPUT_PORT_TYPE


|top_4|UART_RX:inst4
i_Clk => r_RX_Byte[0].CLK
i_Clk => r_RX_Byte[1].CLK
i_Clk => r_RX_Byte[2].CLK
i_Clk => r_RX_Byte[3].CLK
i_Clk => r_RX_Byte[4].CLK
i_Clk => r_RX_Byte[5].CLK
i_Clk => r_RX_Byte[6].CLK
i_Clk => r_RX_Byte[7].CLK
i_Clk => r_Bit_Index[0].CLK
i_Clk => r_Bit_Index[1].CLK
i_Clk => r_Bit_Index[2].CLK
i_Clk => r_Clk_Count[0].CLK
i_Clk => r_Clk_Count[1].CLK
i_Clk => r_Clk_Count[2].CLK
i_Clk => r_Clk_Count[3].CLK
i_Clk => r_Clk_Count[4].CLK
i_Clk => r_Clk_Count[5].CLK
i_Clk => r_Clk_Count[6].CLK
i_Clk => r_Clk_Count[7].CLK
i_Clk => r_Clk_Count[8].CLK
i_Clk => r_RX_DV.CLK
i_Clk => r_RX_Data.CLK
i_Clk => r_RX_Data_R.CLK
i_Clk => r_SM_Main~1.DATAIN
i_RX_Serial => r_RX_Data_R.DATAIN
o_RX_DV <= r_RX_DV.DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[0] <= r_RX_Byte[0].DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[1] <= r_RX_Byte[1].DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[2] <= r_RX_Byte[2].DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[3] <= r_RX_Byte[3].DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[4] <= r_RX_Byte[4].DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[5] <= r_RX_Byte[5].DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[6] <= r_RX_Byte[6].DB_MAX_OUTPUT_PORT_TYPE
o_RX_Byte[7] <= r_RX_Byte[7].DB_MAX_OUTPUT_PORT_TYPE


|top_4|clock_divider:inst2
clk_in => clk_out_reg.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
reset => clk_out_reg.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
clk_out <= clk_out_reg.DB_MAX_OUTPUT_PORT_TYPE


