/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DONE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset_camara")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sca")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sda")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("trigg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("clk_out")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.246;
			LEVEL X FOR 0.736;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 5.14;
			LEVEL 0 FOR 4.86;
			LEVEL 1 FOR 1.158;
		}
	}
}

TRANSITION_LIST("DONE")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 370.261;
			LEVEL 1 FOR 629.739;
		}
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 980.0;
		}
	}
}

TRANSITION_LIST("reset_camara")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("sca")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 1000.0;
		}
	}
}

TRANSITION_LIST("sda")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 1000.0;
		}
	}
}

TRANSITION_LIST("start")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 940.0;
		}
	}
}

TRANSITION_LIST("trigg")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DONE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_camara";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sca";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sda";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "trigg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
